{
  "name": "@christyharagan/ixjs",
  "version": "0.3.7",
  "description": "The Interactive Extensions for JavaScript",
  "main": "dist/cjs/index.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/christyharagan/IxJS.git"
  },
  "keywords": [
    "Iterator",
    "Iterable",
    "Promise",
    "Async"
  ],
  "author": {
    "name": "Christy Haragan",
    "email": "christy.haragan.github@gmail.com",
    "url": "https://github.com/christyharagan"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/christyharagan/IxJS/issues"
  },
  "homepage": "https://github.com/christyharagan/IxJS#readme",
  "devDependencies": {
    "chai": "^3.5.0",
    "mocha": "^3.2.0",
    "npm-run-all": "^2.1.1",
    "npm-scripts-info": "^0.3.6",
    "shx": "^0.1.2",
    "typescript": "^2.1.5"
  },
  "scripts-info": {
    "info": "List available script",
    "build_all": "Build all packages(ES6, CJS, AMD)",
    "build_amd": "Build AMD package with clean up existing build, copy source into dist",
    "build_cjs": "Build CJS package with clean up existing build, copy source into dist",
    "build_es6": "Build ES6 package with clean up existing build, copy source into dist",
    "build_test": "Build CJS package & test spec, execute mocha test runner",
    "build_spec": "Build test specs",
    "clean_spec": "Clean up existing test spec build output",
    "clean_dist_amd": "Clean up existing AMD package output",
    "clean_dist_cjs": "Clean up existing CJS package output",
    "clean_dist_es6": "Clean up existing ES6 package output",
    "compile_dist_amd": "Compile codebase into AMD module",
    "compile_dist_cjs": "Compile codebase into CJS module",
    "compile_dist_es6": "Compile codebase into ES6",
    "test_mocha": "Execute mocha test runner against existing test spec build",
    "test": "Clean up existing test spec build, build test spec and execute mocha test runner",
    "watch": "Watch codebase, trigger compile when source code changes"
  },
  "scripts": {
    "info": "npm-scripts-info",
    "build_all": "npm-run-all build_es6 build_amd build_cjs",
    "build_amd": "npm-run-all clean_dist_amd compile_dist_amd",
    "build_cjs": "npm-run-all clean_dist_cjs compile_dist_cjs",
    "build_es6": "npm-run-all clean_dist_es6 compile_dist_es6",
    "build_test": "shx rm -rf ./dist/ && npm-run-all lint build_cjs clean_spec build_spec test_mocha",
    "build_spec": "tsc --project ./spec --pretty",
    "clean_spec": "shx rm -rf spec-js",
    "clean_dist_amd": "shx rm -rf ./dist/amd",
    "clean_dist_cjs": "shx rm -rf ./dist/cjs",
    "clean_dist_es6": "shx rm -rf ./dist/es6",
    "compile_dist_amd": "tsc ./shim/es6-shim.d.ts ./src/index.ts -m amd      --sourceMap --outDir ./dist/amd --target ES5    --diagnostics --pretty --noImplicitAny --suppressImplicitAnyIndexErrors",
    "compile_dist_cjs": "tsc ./shim/es6-shim.d.ts ./src/index.ts -m commonjs --sourceMap --outDir ./dist/cjs --target ES5 -d --diagnostics --pretty --noImplicitAny --suppressImplicitAnyIndexErrors",
    "compile_dist_es6": "tsc                      ./src/index.ts -m es2015   --sourceMap --outDir ./dist/es6 --target ES6 -d --diagnostics --pretty --noImplicitAny --suppressImplicitAnyIndexErrors",
    "lint_spec": "tslint -c tslint.json spec/**/*.ts",
    "lint_src": "tslint -c tslint.json src/**/*.ts",
    "lint": "npm-run-all lint_src lint_spec",
    "test_mocha": "mocha \"spec-js/spec/**/*.js\"",
    "test": "npm-run-all clean_spec build_spec test_mocha clean_spec",
    "watch": "watch \"echo triggering build && npm run build_test && echo build completed\" src -d -u -w=15"
  }
}
